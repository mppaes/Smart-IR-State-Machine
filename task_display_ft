void func_read_eemprom(void)
{
    int buffer_read_eeprom[32];
    long int valor_escrito_eeprom;
    int count = 32;
    int count_aux;
    int i;
    // ler dado da EEPROM
    for(i = 0; i < 32; i++)
    {
        buffer_read_eeprom[count] = EEPROM.read(count);
        count--;
        delay(200);
    }
    valor_escrito_eeprom = buffer_read_eeprom[1];
    valor_escrito_eeprom = ((valor_escrito_eeprom << 8) | buffer_read_eeprom[2]);
    valor_escrito_eeprom = ((valor_escrito_eeprom << 8) | buffer_read_eeprom[3]);
    valor_escrito_eeprom = ((valor_escrito_eeprom << 8) | buffer_read_eeprom[4]);
    como[0].dev[0].tec[0].ler_ir[0].dado_ir = valor_escrito_eeprom;
    delay(500);
    
    valor_escrito_eeprom = buffer_read_eeprom[5];
    valor_escrito_eeprom = ((valor_escrito_eeprom << 8) | buffer_read_eeprom[6]);
    valor_escrito_eeprom = ((valor_escrito_eeprom << 8) | buffer_read_eeprom[7]);
    valor_escrito_eeprom = ((valor_escrito_eeprom << 8) | buffer_read_eeprom[8]);
    como[0].dev[0].tec[0].ler_ir[1].dado_ir = valor_escrito_eeprom;
    delay(500);
    
    valor_escrito_eeprom = buffer_read_eeprom[9];
    valor_escrito_eeprom = ((valor_escrito_eeprom << 8) | buffer_read_eeprom[10]);
    valor_escrito_eeprom = ((valor_escrito_eeprom << 8) | buffer_read_eeprom[11]);
    valor_escrito_eeprom = ((valor_escrito_eeprom << 8) | buffer_read_eeprom[12]);
    como[0].dev[0].tec[0].ler_ir[2].dado_ir = valor_escrito_eeprom;
    delay(500);
    
    valor_escrito_eeprom = buffer_read_eeprom[13];
    valor_escrito_eeprom = ((valor_escrito_eeprom << 8) | buffer_read_eeprom[14]);
    valor_escrito_eeprom = ((valor_escrito_eeprom << 8) | buffer_read_eeprom[15]);
    valor_escrito_eeprom = ((valor_escrito_eeprom << 8) | buffer_read_eeprom[16]);
    como[0].dev[0].tec[0].ler_ir[3].dado_ir = valor_escrito_eeprom;
    delay(500);
    
    valor_escrito_eeprom = buffer_read_eeprom[17];
    valor_escrito_eeprom = ((valor_escrito_eeprom << 8) | buffer_read_eeprom[18]);
    valor_escrito_eeprom = ((valor_escrito_eeprom << 8) | buffer_read_eeprom[19]);
    valor_escrito_eeprom = ((valor_escrito_eeprom << 8) | buffer_read_eeprom[20]);
    como[0].dev[0].tec[0].ler_ir[4].dado_ir = valor_escrito_eeprom;
    delay(500);
}


bool EEpromWritelong (int address, long int value)
{
	int buffer_val[4];
    int buffer_aux[4];
	int count =3;
	int count_aux;
    int i;
	bool flag_erro = true;
	
	if (address == 0)
	{
		buffer_val[0] = (value & 0xFF); //byte 4
		buffer_val[1] = ((value >> 8) & 0xFF); //byte3
		buffer_val[2] =  ((value >> 16) & 0xFF); //byte2
		buffer_val[3] = ((value >> 24) & 0xFF); //byte1

		//gravação
		for (i = 0; i < 4; i++)
		{
			address = address + 1;
			EEPROM.write(address, buffer_val[count]);
			count--;
	        delay(500);
		}                              

		//confirmar a gravação
		count = 4;
		for ( i = 0; i < 4 ; i++)
		{
			buffer_aux[count] = EEPROM.read(count);
			if (buffer_aux[count] != buffer_val[i])  //ser for diferente, para  a leitura 
			{
				flag_erro = false; //erro
				break; //para o form de confirmação
			}
			count--;
	        delay(250);
		}                            
		if(flag_erro == true)
		{
			lcd.setCursor(0,4);
		    //         1234567890123456   
			lcd.print("Dado Gravado");
		}
	}

	if (address == 4)
	{
		buffer_val[0] = (value & 0xFF); //byte 4
		buffer_val[1] = ((value >> 8) & 0xFF); //byte3
		buffer_val[2] =  ((value >> 16) & 0xFF); //byte2
		buffer_val[3] = ((value >> 24) & 0xFF); //byte1

		//gravação
		for (i = 0; i < 4; i++)
		{
			address = address + 1;
			EEPROM.write(address, buffer_val[count]);
			count--;
	        delay(500);
		}                              

		//confirmar a gravação
		count = 8;
		count_aux = 4;
		for ( i = 0; i < 4 ; i++)
		{
			buffer_aux[count_aux] = EEPROM.read(count);
			if (buffer_aux[count_aux] != buffer_val[i])  //ser for diferente, para  a leitura 
			{
				flag_erro = false; //erro
				break; //para o form de confirmação
			}
			count--;
			count_aux--;
	        delay(250);
		}                            
		if(flag_erro == true)
		{
			lcd.setCursor(0,4);
		    //         1234567890123456   
			lcd.print("Dado Gravado");
		}
	}

        if (address == 8)
	{
		buffer_val[0] = (value & 0xFF); //byte 4
		buffer_val[1] = ((value >> 8) & 0xFF); //byte3
		buffer_val[2] =  ((value >> 16) & 0xFF); //byte2
		buffer_val[3] = ((value >> 24) & 0xFF); //byte1

		//gravação
		for (i = 0; i < 4; i++)
		{
			address = address + 1;
			EEPROM.write(address, buffer_val[count]);
			count--;
	        delay(500);
		}                              

		//confirmar a gravação
		count = 12;
		count_aux = 4;
		for ( i = 0; i < 4 ; i++)
		{
			buffer_aux[count_aux] = EEPROM.read(count);
			if (buffer_aux[count_aux] != buffer_val[i])  //ser for diferente, para  a leitura 
			{
				flag_erro = false; //erro
				break; //para o form de confirmação
			}
			count--;
			count_aux--;
	        delay(250);
		}                            
		if(flag_erro == true)
		{
			lcd.setCursor(0,4);
		    //         1234567890123456   
			lcd.print("Dado Gravado");
		}
	}

        if (address == 12)
	{
		buffer_val[0] = (value & 0xFF); //byte 4
		buffer_val[1] = ((value >> 8) & 0xFF); //byte3
		buffer_val[2] =  ((value >> 16) & 0xFF); //byte2
		buffer_val[3] = ((value >> 24) & 0xFF); //byte1

		//gravação
		for (i = 0; i < 4; i++)
		{
			address = address + 1;
			EEPROM.write(address, buffer_val[count]);
			count--;
	        delay(500);
		}                              

		//confirmar a gravação
		count = 16;
		count_aux = 4;
		for ( i = 0; i < 4 ; i++)
		{
			buffer_aux[count_aux] = EEPROM.read(count);
			if (buffer_aux[count_aux] != buffer_val[i])  //ser for diferente, para  a leitura 
			{
				flag_erro = false; //erro
				break; //para o form de confirmação
			}
			count--;
			count_aux--;
	        delay(250);
		}                            
		if(flag_erro == true)
		{
			lcd.setCursor(0,4);
		    //         1234567890123456   
			lcd.print("Dado Gravado");
		}
	}
  
        if (address == 16)
	{
		buffer_val[0] = (value & 0xFF); //byte 4
		buffer_val[1] = ((value >> 8) & 0xFF); //byte3
		buffer_val[2] =  ((value >> 16) & 0xFF); //byte2
		buffer_val[3] = ((value >> 24) & 0xFF); //byte1

		//gravação
		for (i = 0; i < 4; i++)
		{
			address = address + 1;
			EEPROM.write(address, buffer_val[count]);
			count--;
	        delay(500);
		}                              

		//confirmar a gravação
		count = 20;
		count_aux = 4;
		for ( i = 0; i < 4 ; i++)
		{
			buffer_aux[count_aux] = EEPROM.read(count);
			if (buffer_aux[count_aux] != buffer_val[i])  //ser for diferente, para  a leitura 
			{
				flag_erro = false; //erro
				break; //para o form de confirmação
			}
			count--;
			count_aux--;
	        delay(250);
		}                            
		if(flag_erro == true)
		{
			lcd.setCursor(0,4);
		    //         1234567890123456   
			lcd.print("Dado Gravado");
		}
	}
	return flag_erro;
}

