/****************************************************************************
*                                                  São José dos Campos - SP *
*                                                                           *
* Mateus Pinto Paes                                                         *
* ============================================                              *
*                                                                           *
* Programa: HOME-IR                                                         *
* Projeto: HOME-IR                                                          *
* VersãoGit: N/A                                                             *
*                                                                           *
****************************************************************************/
 
/**
* @ingroup task_Conexao
* @brief   Função de que Lista as Redes Wireless Acces Point disponiveis
* @param   Nenhum
* @return  TRUE =   Redes Disponiveis OK
* @return  FALSE = Não Existe Redes Disponiveis para Conexão Redes Disponiveis OK
*
 * @note Verificado por:
* @note Validado por:
*
* @author  Tec. Mateus P Paes (mppaes@me.com)
* @date 10/fev/2015
*
*/
/*********************************************************************
* userver_cc3000begin
*********************************************************************/
 void func_conexao_ip_rede(void)
 {
    if (!cc3000.begin())
    {
        Serial.println("Modulo nao inicializou");
        while(500);
    }
    Serial.println("Modulo de Interface Wireless Inicializado");
    delay(100);
    /*** Verifica  conexao CC3000 com rede SSID PASS e SECURITY  ***/
    if (!cc3000.connectToAP(WLAN_SSID, WLAN_PASS, WLAN_SECURITY))
    {
        Serial.println("Falha =(");
        while(500);
    }
    Serial.println("Conexão com Acces Point OK");
 
    /*** Verifica DHCP ***/
    while (!cc3000.checkDHCP())
    {    
        delay(500);
    } 
    Serial.println("DHCP OK");
   
    /*** Verifica se placa pega IP mascara gateway ***/
    while (!atribuir_ip_netmask_gateway_dhcp_dns())
    {
        delay(500);
    }
    Serial.println("IP Configurado");
   
    /*** Inicia Servidor ***/
    echoServer.begin();
    Serial.println("Servidor Inicializado");
}
/**
* @ingroup task_Conexao
* @brief   Função de verificacao do DHCP
* @param   Nenhum
* @return  TRUE =
 * @return  FALSE =
 *
 * @note Verificado por:
* @note Validado por:
*
* @author  Tec. Mateus P Paes (mppaes@me.com)
* @date 10/fev/2015
*
*/
/*********************************************************************
* userver_getip_dinamico
*********************************************************************/
bool atribuir_ip_netmask_gateway_dhcp_dns(void)
{
  boolean error;
  uint32_t ipAddress, netmask, gateway, dhcpserv, dnsserv; //Variaveis IP etc..
  //If shield nao conectar e atribuir IP via DHCP automatico
  //nao atribui IP a placa e retorna false
  if(!cc3000.getIPAddress(&ipAddress, &netmask, &gateway, &dhcpserv, &dnsserv))
  {
    Serial.println("Desabilitado o endereco de IP!");
    error = false;
  }
  else //Se Shield atribui IP via DHCP, imprime na serial os valores
  {
    Serial.print("Módulo com Endereço de IP:");
    cc3000.printIPdotsRev(ipAddress);
    Serial.println();
   error = true;
  }
  return (error);
}
 
/**
* @ingroup task_Conexao
* @brief   Função de verificacao de Conexão
* @param   Nenhum
* @return  TRUE =    Conexão OK
 * @return  FALSE =  Conexão ÑOK
 *
 * @note Verificado por:
* @note Validado por:
*
* @author  Tec. Mateus P Paes (mppaes@me.com)
* @date 10/fev/2015
*
*/
/*********************************************************************
* func_verifica_conexao
*********************************************************************/
bool func_verifica_conexao(void)
{
    boolean error;
    wifistatus = cc3000.getStatus();
    if(wifistatus == STATUS_CONNECTED)
    {
        error = true;
        //Serial.println(" WIFI Conectado");
    }
    /*** Se Desconectou Volta para State COnectando ***/
    if(wifistatus == STATUS_DISCONNECTED)
    {           
        error = false;
        Serial.println("Desconectou da Rede");
    }
    return (error);
}



